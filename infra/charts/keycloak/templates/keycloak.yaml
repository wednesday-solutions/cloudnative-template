apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.keycloak.metadata.name }}
  labels:
    app: {{ .Values.keycloak.metadata.labels.app }}
spec:
  ports:
    - name: https
      port: 443
      targetPort: 8443
  selector:
    app: {{ .Values.keycloak.metadata.labels.app }}
  type: ClusterIP
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.keycloak.metadata.name }}
  labels:
    app: {{ .Values.keycloak.metadata.labels.app }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "4"
spec:
  replicas: {{ .Values.keycloak.config.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.keycloak.metadata.labels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.keycloak.metadata.labels.app }}
    spec:
      containers:
        - name: {{ .Values.keycloak.metadata.name }}
          image: quay.io/keycloak/keycloak:20.0.2
          args: ["start", "--cache-stack=kubernetes"]
          volumeMounts:
          - name: certs
            mountPath: "/etc/certs"
            readOnly: true
          envFrom:
          - secretRef:
              name: {{ .Values.keycloak.secrets.name }}
          env:
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.database.metadata.name }}-superuser"
                  key: password
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.database.metadata.name }}-superuser"
                  key: username
          ports:
            - name: jgroups
              containerPort: 7600
            - name: https
              containerPort: 8443
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /health/ready
              port: 8443
            initialDelaySeconds: 60
            periodSeconds: 1
      volumes:
      - name: certs
        secret:
          secretName: {{ .Values.keycloak.tls.secretName }}
