import type { TenantAttributes } from 'entities-schemas';
import type { ModelDefined, Optional } from '../../index';
import { DataTypes, dbConnection } from '../../index';

type TenantCreationAttributes = Optional<TenantAttributes, 'id'>;

/**
 * Tenant Entity in the database represents a tenant, more of a company that will
 * have their own database!
 */
export const Tenant: ModelDefined<TenantCreationAttributes, TenantAttributes>
  = dbConnection.instance.define(
    'users',
    {
      id: {
        type: DataTypes.INTEGER,
        primaryKey: true,
        autoIncrement: true,
      },
      // Generated by default using postgres modules
      publicUuid: {
        type: DataTypes.UUIDV4,
        field: 'public_uuid',
      },
      tenantAccessKey: {
        type: DataTypes.STRING,
        field: 'tenant_access_key',
      },
      name: {
        type: DataTypes.STRING,
        allowNull: false,
      },
      email: {
        type: DataTypes.CITEXT,
        allowNull: false,
        unique: true,
        validate: {
          isEmail: true,
        },
      },
      companyName: {
        type: DataTypes.STRING,
        allowNull: false,
        field: 'company_name',
      },
      password: {
        type: DataTypes.STRING,
        allowNull: false,
      },
      createdAt: {
        type: DataTypes.DATE,
        field: 'created_at',
      },
      updatedAt: {
        type: DataTypes.DATE,
        field: 'updated_at',
      },
    },
    { tableName: 'tenants', timestamps: false, underscored: true },
  );

export default Tenant;
